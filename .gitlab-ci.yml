stages:
  - build
  - test
  - build-wheel
  - python-test
  - build-coverage
  - sonar
  - push-rc
  
variables:
  TWINE_USERNAME: gitlab-ci-token
  TWINE_PASSWORD: $CI_JOB_TOKEN
  TWINE_REPOSITORY_URL: https://gitlab.lam.fr/api/v4/projects/${CI_PROJECT_ID}/packages/pypi
  IMAGE_BUILD_DIR: $CI_REGISTRY/cpf/docker_builds
  SONARQUBE_URL: https://sonarqube.lam.fr

# Specific Rules

.trigger-rules:
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: always
    - if: $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH
      when: manual

# OSX Stages

build-osx:
  stage: build
  tags:
    - osx
  when: manual
  script:
    - mkdir -p build
    - cd build
    - cmake .. -DCMAKE_INSTALL_PREFIX=$CI_PROJECT_DIR
    - make -j 2
    - make install
  cache:
    key: "osx-$CI_COMMIT_REF_SLUG"
    policy: push
    untracked: true

test-osx:
  stage: test
  tags:
    - osx
  when: manual
  allow_failure: true
  script:
    - cd build
    - make test
  cache:
    key: "osx-$CI_COMMIT_REF_SLUG"
    policy: pull
    untracked: true

.wheel-osx:
  stage: build-wheel
  tags:
    - osx
  when: manual
  script:
    - source /Users/grunner/venv/amazed$PYTHON_VERSION/bin/activate
    - python setup.py bdist_wheel
    - delocate-wheel -w wheel/ dist/pylibamazed-*-cp$PYTHON_VERSION-*.whl
    - pip install wheel/pylibamazed-*-cp$PYTHON_VERSION-*.whl
    - cd /
    - python -c "import pylibamazed; import pkg_resources; print(pkg_resources.get_distribution('pylibamazed').version)"
    - python -c "from pylibamazed.redshift import get_version ; print(get_version())"
  after_script:
    - source /Users/grunner/venv/amazed$PYTHON_VERSION/bin/activate
    - pip uninstall -y pylibamazed
  artifacts:
    paths:
      - wheel/
    expire_in: 1 week
  cache:
    key: "osx-$CI_COMMIT_REF_SLUG"
    policy: pull
    untracked: true

wheel36-osx:
  variables:
    PYTHON_VERSION: "36"
  extends:
    - .wheel-osx

wheel37-osx:
  variables:
    PYTHON_VERSION: "37"
  extends:
    - .wheel-osx

wheel38-osx:
  variables:
    PYTHON_VERSION: "38"
  extends:
    - .wheel-osx

.push-rc-osx:
  stage: push-rc
  tags:
    - osx
  when: manual
  before_script:
    - source /Users/grunner/venv/amazed$PYTHON_VERSION/bin/activate
    - pip install twine
  script:
    - twine upload --repository-url $TWINE_REPOSITORY_URL --verbose --skip-existing --disable-progress-bar wheel/pylibamazed-*-cp$PYTHON_VERSION-*.whl
  cache:
    key: "osx-$CI_COMMIT_REF_SLUG"
    policy: pull
    untracked: true

push-rc-36-osx:
  variables:
    PYTHON_VERSION: "36"
  extends:
    - .push-rc-osx
  dependencies:
    - wheel36-osx

push-rc-37-osx:
  variables:
    PYTHON_VERSION: "37"
  extends:
    - .push-rc-osx
  dependencies:
    - wheel37-osx

push-rc-38-osx:
  variables:
    PYTHON_VERSION: "38"
  extends:
    - .push-rc-osx
  dependencies:
    - wheel38-osx

# Manylinux stages

.build-manylinux:
  stage: build
  script:
    - source /venv/p36/bin/activate
    - mkdir -p build
    - cd build
    - cmake .. -DCMAKE_PREFIX_PATH=/root/local -DCMAKE_INSTALL_PREFIX=$CI_PROJECT_DIR
    - make -j4
    - make install
  cache:
    policy: push
    untracked: true

.build-coverage-manylinux:
  stage: build-coverage
  when: manual
  script:
    - source /venv/p36/bin/activate
    - mkdir -p build
    - cd build
    - cmake .. -DCMAKE_BUILD_TYPE=Debug -DCMAKE_PREFIX_PATH=/root/local -DCMAKE_CXX_FLAGS="-O0 -fprofile-arcs -ftest-coverage --coverage"
    - make -j4
    - make test
    - gcovr --filter ../RedshiftLibrary/src/lib/ --xml --exclude-unreachable-branches --print-summary -o coverage.xml --root .
    - gcovr --filter=../RedshiftLibrary/src/lib/ --filter=../RedshiftLibrary/RedshiftLibrary --html -o index.html --root .
  coverage: /^\s*lines:\s*\d+.\d+\%/
  artifacts:
    paths:
      - build/coverage.xml
      - build/index.html
    expire_in: 1 week

.test-manylinux:
  stage: test
  script:
    - cd build
    - make test
  cache:
    policy: pull
    untracked: true

.wheel-manylinux:
  stage: build-wheel
  script:
    - source /venv/p$PYTHON_VERSION/bin/activate
    - python setup.py bdist_wheel
    - auditwheel repair dist/pylibamazed-*-cp$PYTHON_VERSION-*.whl -w wheel --plat $PLATFORM
    - pip install wheel/pylibamazed-*-cp$PYTHON_VERSION-*.whl
    - python -c "import pylibamazed; import pkg_resources; print(pkg_resources.get_distribution('pylibamazed').version)"
    - cd /
    - python -c "from pylibamazed.redshift import get_version ; print(get_version())"
  after_script:
    - source /venv/p$PYTHON_VERSION/bin/activate
    - pip uninstall -y pylibamazed
  artifacts:
    paths:
      - wheel/
    expire_in: 1 week
  cache:
    policy: pull
    untracked: true

.pytest-manylinux:
  stage: python-test
  script:
    - source /venv/p$PYTHON_VERSION/bin/activate
    - pip install wheel/pylibamazed-*-cp$PYTHON_VERSION-*.whl
    - pytest
  after_script:
    - source /venv/p$PYTHON_VERSION/bin/activate
    - pip uninstall -y pylibamazed
  cache:
    policy: pull
    untracked: true

.push-rc-manylinux:
  stage: push-rc
  when: manual
  script:
    - source /venv/p$PYTHON_VERSION/bin/activate
    - twine upload --repository-url $TWINE_REPOSITORY_URL --verbose --disable-progress-bar wheel/pylibamazed-*-cp$PYTHON_VERSION-*.whl
  cache:
    policy: pull
    untracked: true

.sonar-manylinux:
  stage: sonar
  when: manual
  allow_failure: true
  before_script:
    - export VERSION=`cat VERSION`
  script:
    - sonar-scanner
        -Dsonar.projectKey=${CI_PROJECT_NAME}
        -Dsonar.language=c++
        -Dsonar.cxx.file.suffixes=.cpp,.h
        -Dsonar.sources=RedshiftLibrary/src/lib
        -Dsonar.cxx.includeDirectories=RedshiftLibrary/RedshiftLibrary
        -Dsonar.cxx.forceIncludes=RedshiftLibrary/RedshiftLibrary
        -Dsonar.projectVersion=$VERSION
        -Dsonar.host.url=$SONARQUBE_URL
        -Dsonar.login=$SONAR_TOKEN
        -Dsonar.exclusions=*.xml
        -Dsonar.cxx.coverage.reportPath=build/coverage.xml

# Manylinux2010 stages

.manylinux2010:
  image: $IMAGE_BUILD_DIR/amazed-manylinux2010
  variables:
    PLATFORM: "manylinux2010_x86_64"
  cache:
    key: "manylinux2010-$CI_COMMIT_REF_SLUG"

build-manylinux2010:
  extends:
    - .manylinux2010
    - .build-manylinux

test-manylinux2010:
  extends:
    - .manylinux2010
    - .test-manylinux

wheel36-manylinux2010:
  variables:
    PYTHON_VERSION: "36"
  extends:
    - .manylinux2010
    - .wheel-manylinux

wheel37-manylinux2010:
  variables:
    PYTHON_VERSION: "37"
  when: manual
  extends:
    - .manylinux2010
    - .wheel-manylinux

wheel38-manylinux2010:
  variables:
    PYTHON_VERSION: "38"
  when: manual
  extends:
    - .manylinux2010
    - .wheel-manylinux

pytest36-manylinux2010:
  variables:
    PYTHON_VERSION: "36"
  extends:
    - .manylinux2010
    - .pytest-manylinux

pytest37-manylinux2010:
  variables:
    PYTHON_VERSION: "37"
  when: manual
  extends:
    - .manylinux2010
    - .pytest-manylinux

pytest38-manylinux2010:
  variables:
    PYTHON_VERSION: "38"
  when: manual
  extends:
    - .manylinux2010
    - .pytest-manylinux

push-rc-36-manylinux2010:
  variables:
    PYTHON_VERSION: "36"
  extends:
    - .manylinux2010
    - .push-rc-manylinux
  dependencies:
    - wheel36-manylinux2010

push-rc-37-manylinux2010:
  variables:
    PYTHON_VERSION: "37"
  extends:
    - .manylinux2010
    - .push-rc-manylinux
  dependencies:
    - wheel37-manylinux2010

push-rc-38-manylinux2010:
  variables:
    PYTHON_VERSION: "38"
  extends:
    - .manylinux2010
    - .push-rc-manylinux
  dependencies:
    - wheel38-manylinux2010

coverage-manylinux2010:
  extends:
    - .manylinux2010
    - .build-coverage-manylinux

sonar-scanner-manylinux2010:
  extends:
    - .manylinux2010
    - .sonar-manylinux
  dependencies:
    - coverage-manylinux2010

# Manylinux2014 stages

.manylinux2014:
  image: $IMAGE_BUILD_DIR/amazed-manylinux2014
  variables:
    PLATFORM: "manylinux2014_x86_64"
  when: manual
  cache:
    key: "manylinux2014-$CI_COMMIT_REF_SLUG"

build-manylinux2014:
  extends:
    - .manylinux2014
    - .build-manylinux

test-manylinux2014:
  extends:
    - .manylinux2014
    - .test-manylinux

wheel36-manylinux2014:
  variables:
    PYTHON_VERSION: "36"
  extends:
    - .manylinux2014
    - .wheel-manylinux

wheel37-manylinux2014:
  variables:
    PYTHON_VERSION: "37"
  when: manual
  extends:
    - .manylinux2014
    - .wheel-manylinux

wheel38-manylinux2014:
  variables:
    PYTHON_VERSION: "38"
  when: manual
  extends:
    - .manylinux2014
    - .wheel-manylinux

pytest36-manylinux2014:
  variables:
    PYTHON_VERSION: "36"
  extends:
    - .manylinux2014
    - .pytest-manylinux

pytest37-manylinux2014:
  variables:
    PYTHON_VERSION: "37"
  when: manual
  extends:
    - .manylinux2014
    - .pytest-manylinux

pytest38-manylinux2014:
  variables:
    PYTHON_VERSION: "38"
  when: manual
  extends:
    - .manylinux2014
    - .pytest-manylinux

push-rc-36-manylinux2014:
  variables:
    PYTHON_VERSION: "36"
  extends:
    - .manylinux2014
    - .push-rc-manylinux
  dependencies:
    - wheel36-manylinux2014

push-rc-37-manylinux2014:
  variables:
    PYTHON_VERSION: "37"
  extends:
    - .manylinux2014
    - .push-rc-manylinux
  dependencies:
    - wheel37-manylinux2014

push-rc-38-manylinux2014:
  variables:
    PYTHON_VERSION: "38"
  extends:
    - .manylinux2014
    - .push-rc-manylinux
  dependencies:
    - wheel38-manylinux2014