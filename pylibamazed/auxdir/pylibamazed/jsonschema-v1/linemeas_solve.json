{
  "$id": "linemeas-solve",
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "Linemeas solve",
  "type": "object",
  "additionalProperties": false,
  "required": [
    "linemodel"
  ],
  "properties": {
    "linemodel": {
      "required": [
        "continuumcomponent",
        "linetypefilter",
        "lineforcefilter",
        "improveBalmerFit",
        "polynomialdegree",
        "lya",
        "linecatalog",
        "nsigmasupport",
        "linewidthtype",
        "fittingmethod",
        "velocityfit",
        "lbdaoffsetfit",
        "ampoffsetfit",
        "lineRatioType"
      ],
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "continuumcomponent": {
          "type": "string",
          "enum": [
            "fromspectrum",
            "tplfit",
            "tplfitauto",
            "nocontinuum"
          ],
          "title": "Continuum processing method",
          "description": "Selects the method for processing the continuum: \n * **fromspectrum**: remove an estimated continuum (the continuum estmation is then tuned via continuumRemoval parameters). The redshift is thus only estimated from the lines \n * **tplfit** : fit a set of redshifted template (aka \"fullmodel\" ie contiuum model + line model) \n * **tplfitauto** : same than \"tplfit\", but switch to \"fromspectrum\" if the fitted continuum amplitude is found significantly negative (at all z)"
        },
        "improveBalmerFit": {
          "type": "boolean",
          "title": "Wether to improve Balmer fit",
          "description": "Used only if `lineRatioType=rules`"
        },
        "linetypefilter": {
          "type": "string",
          "enum": [
            "E",
            "A",
            "no"
          ],
          "title": "Filter on lines type",
          "description": "Restrictions on the type of line to fit: \n * **E**: Emission \n * **A**: Absorption \n * **no**: fit all"
        },
        "lineforcefilter": {
          "type": "string",
          "enum": [
            "W",
            "S",
            "no"
          ],
          "title": "Filter on lines force",
          "description": "Restrict the strength category of lines to fit: \n * **W**: Weak \n * **S**: strong \n * **no**: fit all"
        },
        "polynomialdegree": {
          "type": "integer",
          "title": "Polynomial degree",
          "description": "Value between 0 and 2, referring to the polynom degree to represent the continuum below lines. Useful only if ampoffsetfit=True."
        },
        "lya": {
          "$ref": "lya_fit.json"
        },
        "linecatalog": {
          "type": "string",
          "title": "Line catalog path",
          "description": "Path to line catalog file"
        },
        "nsigmasupport": {
          "type": "number",
          "title": "Support size",
          "description": "Full (not half) size of each line support in sigma of the gaussian profile "
        },
        "linewidthtype": {
          "type": "string",
          "enum": [
            "combined",
            "instrumentdriven",
            "velocitydriven"
          ],
          "title": "Line width type",
          "description": "Selects which component are included in the line width \n * **instrumentdriven**: only instrument resolution (no intrinsic line width due to velocity dispersion) \n * **velocitydriven**: only line velocity dispersion (assuming negligible instrument PSF) \n * **combined**: both instrument resolution and velocity dispersion"
        },
        "fittingmethod": {
          "type": "string",
          "enum": [
            "individual",
            "svd",
            "hybrid",
            "lbfgsb",
            "ones",
            "random"
          ],
          "title": "Line fitting method",
          "description": "Line fitting method: \n* **individual**: independant fit of all lines amplitude \n * **svd**: joint fit of all lines amplitude (sparsity not exploited) \n * **hybrid**: svd only for groups of lines sharings pixels (eg. Ha and N2), independant fit for the other lines \n * **lbfgsb**: like hybrid but using non-linear least-square fit instead of svd to fit jointly the 3 Gaussian parameters (amplitude, position and width). Based on l-bfgs-b algorithm (bounded gradient descent). \n Note: it is not relevant when lineRatioType = tplratio, because one set of ratio corresponds to a unique amplitude fitted for all lines, and thus it is using the individual fitter"
        },
        "velocityfit": {
          "type": "boolean",
          "title": "Wether to fit line width",
          "discription": "Wether 2nd pass includes line width fitting. Used only if `fittingmethod=lbfgsb` (for linemeas)."
        },
        "emvelocityfitmin": {
          "type": "number",
          "title": "Emission lines velocity min",
          "description": "Tabulation of velocity for line width fitting in km s-1: minimal value for emission lines. To specify only if fittingmethod is lbfgsb."
        },
        "emvelocityfitmax": {
          "type": "number",
          "title": "Emission lines velocity max",
          "description": "Tabulation of velocity for line width fitting in km s-1: maximal value for emission lines. To specify only if fittingmethod is lbfgsb."
        },
        "absvelocityfitmin": {
          "type": "number",
          "title": "Aborption lines velocity min",
          "description": "Tabulation of velocity for line width fitting in km s-1: minimal value for absorption lines. To specify only if fittingmethod is lbfgsb."
        },
        "absvelocityfitmax": {
          "type": "number",
          "title": "Aborption lines velocity max",
          "description": "Tabulation of velocity for line width fitting in km s-1: maximal value for absorption lines. To specify only if fittingmethod is lbfgsb."
        },
        "lbdaoffsetfit": {
          "type": "boolean",
          "title": "Wether to fit wavelength offset",
          "description": "Wether to include wavelength offset fitting. Relevant only for `fittingmethod=svd`, `hybrid` or `lbfgsb`"
        },
        "ampoffsetfit": {
          "type": "boolean",
          "title": "Wether to fit amplitude offset",
          "description": "Wether to use line's polynomial offset in the profile fitting. Relevant only for `fittingmethod=svd`, `hybrid` or `lbfgsb`"
        },
        "lineRatioType": {
          "type": "string",
          "enum": [
            "tplratio",
            "rules",
            "tplcorr"
          ],
          "title": "Line ratio type",
          "description": "\n * **rules**: fit all lines amplitude independently with eventualy some constraints (see rules parameter below) \n * **tplratio**: fit one amplitude with fixed line ratios coming from template-ratio catalogs"
        },
        "rules": {
          "type": "string",
          "enum": [
            "all",
            "no",
            "strongweak",
            "balmersingle",
            "ratiorange"
          ],
          "title": "Rules",
          "description": "Selects used rules (only for `lineRatioType=rules`)"
        }
      }
    }
  }
}
